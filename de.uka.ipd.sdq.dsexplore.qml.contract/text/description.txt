Model QMLContract

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package contract <http://sdq.ipd.kit.edu/QML/contract/1.0>

  Class SimpleQMLContract -> GenericQMLContract
    Reference criteria : Criterion<<0..*>>
    Reference contractType : QMLContractType<<1..1>>
    Operation all_DIMENSIONs_must_be_from_same_CONTRACTTYPE(EDiagnosticChain, EMap) : EBoolean

  Class Criterion -> Identifier
    Reference dimension : Dimension<<1..1>>
    Reference aspects : EvaluationAspect<<1..*>>
    Operation Only_CONSTRAINTS_have_RESTRICTIONS(EDiagnosticChain, EMap) : EBoolean
    Operation FREQUENCY_only_possible_if_DIMENSION_is_ordered(EDiagnosticChain, EMap) : EBoolean
    Operation POINTESTIMATOR_only_for_numeric_dimensions(EDiagnosticChain, EMap) : EBoolean
    Operation Only_OBJECTIVES_have_GOALS(EDiagnosticChain, EMap) : EBoolean

  Class EvaluationAspect -> Identifier
    Reference aspectRequirement : AspectRequirement
    Operation FREQUENCY_LIMIT_must_be_NUMERIC(EDiagnosticChain, EMap) : EBoolean
    Operation FREQUENCY_LIMIT_must_be_between_0_and_100(EDiagnosticChain, EMap) : EBoolean

  Class AspectRequirement -> Identifier
    Reference aspectRequirementLiteral : ValueLiteral<<1..1>>

  Class ValueLiteral -> Identifier

  Class Percentile -> PointEstimator
    Attribute percentile : EDouble<<1..1>>
    Operation PERCENTILE_between_0_and_100(EDiagnosticChain, EMap) : EBoolean

  Class PointEstimator -> StochasticEvaluationAspect

  Class StochasticEvaluationAspect -> EvaluationAspect

  Class Frequency -> StochasticEvaluationAspect
    Reference upperLimit : RangeValue
    Reference lowerLimit : RangeValue
    Operation range_of_FREQUENCY_must_have_UPPERLIMIT_or_LOWERLIMIT(EDiagnosticChain, EMap) : EBoolean

  Class RangeValue -> Identifier
    Reference rangeLimitLiteral : ValueLiteral<<1..1>>
    Attribute type : EnumRangeValueType<<1..1>>

  Class Mean -> PointEstimator

  Class Variance -> PointEstimator

  Class NumericLiteral -> ValueLiteral
    Attribute value : EDouble<<1..1>>

  Class EnumLiteral -> ValueLiteral
    Reference value : Element<<1..1>>

  Class SetLiteral -> ValueLiteral
    Reference values : Element<<1..*>>

  Class RefinedQMLContract -> GenericQMLContract
    Reference refinedBy : Criterion<<0..*>>
    Reference baseContract : GenericQMLContract<<1..1>>
    Operation contract_cannot_refine_itself(EDiagnosticChain, EMap) : EBoolean

  Class Value -> DeterministicEvaluationAspect

  Class DeterministicEvaluationAspect -> EvaluationAspect

  Class Objective -> Criterion

  Class Constraint -> Criterion
    Operation All_ASPECTS_of_CONSTRAINTS_have_RESTRICTIONS(EDiagnosticChain, EMap) : EBoolean

  Class Restriction -> AspectRequirement
    Attribute operator : EnumOperator<<1..1>>

  Class Goal -> AspectRequirement

  Class GenericQMLContract -> QMLDeclaration

  Class ScaleLiteral -> ValueLiteral, ENamedElement
    Attribute value : ENumber<<1..1>>

  Enum EnumOperator
    Literal less = 0
    Literal greater = 1
    Literal equal = 2
    Literal lessOrEqual = 3
    Literal greaterOrEqual = 4

  Enum EnumRangeValueType
    Literal inclusive = 0
    Literal exclusive = 1
