/*
 * generated by Xtext 2.24.0
 */
package edu.kit.ipd.are.dsexplore.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import edu.kit.ipd.are.dsexplore.ide.contentassist.antlr.internal.InternalFcDslParser;
import edu.kit.ipd.are.dsexplore.services.FcDslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class FcDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(FcDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, FcDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPlacementStrategyAccess().getAlternatives(), "rule__PlacementStrategy__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getAppearanceAccess().getAlternatives(), "rule__Appearance__Alternatives");
			builder.put(grammarAccess.getPlacementPolicyAccess().getAlternatives(), "rule__PlacementPolicy__Alternatives");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getGroup(), "rule__BehaviourInclusion__Group__0");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getGroup_8(), "rule__BehaviourInclusion__Group_8__0");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getGroup_8_3(), "rule__BehaviourInclusion__Group_8_3__0");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getGroup_11(), "rule__BehaviourInclusion__Group_11__0");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getGroup_11_3(), "rule__BehaviourInclusion__Group_11_3__0");
			builder.put(grammarAccess.getPointCutAccess().getGroup(), "rule__PointCut__Group__0");
			builder.put(grammarAccess.getPointCutAccess().getGroup_4(), "rule__PointCut__Group_4__0");
			builder.put(grammarAccess.getAdviceAccess().getGroup(), "rule__Advice__Group__0");
			builder.put(grammarAccess.getAdviceAccess().getGroup_4(), "rule__Advice__Group_4__0");
			builder.put(grammarAccess.getFeatureSelectionAccess().getGroup(), "rule__FeatureSelection__Group__0");
			builder.put(grammarAccess.getFeatureSelectionAccess().getGroup_3(), "rule__FeatureSelection__Group_3__0");
			builder.put(grammarAccess.getFeatureListAccess().getGroup(), "rule__FeatureList__Group__0");
			builder.put(grammarAccess.getFeatureListAccess().getGroup_2(), "rule__FeatureList__Group_2__0");
			builder.put(grammarAccess.getSelectedCVAccess().getGroup(), "rule__SelectedCV__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getPlacementStrategy_ImplAccess().getGroup(), "rule__PlacementStrategy_Impl__Group__0");
			builder.put(grammarAccess.getExternalCallPlacementStrategyAccess().getGroup(), "rule__ExternalCallPlacementStrategy__Group__0");
			builder.put(grammarAccess.getExternalCallPlacementStrategyAccess().getGroup_3(), "rule__ExternalCallPlacementStrategy__Group_3__0");
			builder.put(grammarAccess.getInternalActionPlacementStrategyAccess().getGroup(), "rule__InternalActionPlacementStrategy__Group__0");
			builder.put(grammarAccess.getInternalActionPlacementStrategyAccess().getGroup_3(), "rule__InternalActionPlacementStrategy__Group_3__0");
			builder.put(grammarAccess.getControlFlowPlacementStrategyAccess().getGroup(), "rule__ControlFlowPlacementStrategy__Group__0");
			builder.put(grammarAccess.getControlFlowPlacementStrategyAccess().getGroup_3(), "rule__ControlFlowPlacementStrategy__Group_3__0");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getImportsAssignment_0(), "rule__BehaviourInclusion__ImportsAssignment_0");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getMultipleAssignment_1(), "rule__BehaviourInclusion__MultipleAssignment_1");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getNameAssignment_3(), "rule__BehaviourInclusion__NameAssignment_3");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getIdAssignment_4(), "rule__BehaviourInclusion__IdAssignment_4");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getDescriptionAssignment_7(), "rule__BehaviourInclusion__DescriptionAssignment_7");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getPointCutAssignment_8_2(), "rule__BehaviourInclusion__PointCutAssignment_8_2");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getPointCutAssignment_8_3_1(), "rule__BehaviourInclusion__PointCutAssignment_8_3_1");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getFeatureCompletionAssignment_10(), "rule__BehaviourInclusion__FeatureCompletionAssignment_10");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getAdviceAssignment_11_2(), "rule__BehaviourInclusion__AdviceAssignment_11_2");
			builder.put(grammarAccess.getBehaviourInclusionAccess().getAdviceAssignment_11_3_1(), "rule__BehaviourInclusion__AdviceAssignment_11_3_1");
			builder.put(grammarAccess.getPointCutAccess().getNameAssignment_2(), "rule__PointCut__NameAssignment_2");
			builder.put(grammarAccess.getPointCutAccess().getPlacementStrategyAssignment_4_1(), "rule__PointCut__PlacementStrategyAssignment_4_1");
			builder.put(grammarAccess.getAdviceAccess().getAppearsAssignment_3(), "rule__Advice__AppearsAssignment_3");
			builder.put(grammarAccess.getAdviceAccess().getPointCutAssignment_4_1(), "rule__Advice__PointCutAssignment_4_1");
			builder.put(grammarAccess.getAdviceAccess().getPlacementPolicyAssignment_6(), "rule__Advice__PlacementPolicyAssignment_6");
			builder.put(grammarAccess.getFeatureSelectionAccess().getCompletionAssignment_0(), "rule__FeatureSelection__CompletionAssignment_0");
			builder.put(grammarAccess.getFeatureSelectionAccess().getFeatureListsAssignment_2(), "rule__FeatureSelection__FeatureListsAssignment_2");
			builder.put(grammarAccess.getFeatureSelectionAccess().getFeatureListsAssignment_3_1(), "rule__FeatureSelection__FeatureListsAssignment_3_1");
			builder.put(grammarAccess.getFeatureListAccess().getFeaturesAssignment_1(), "rule__FeatureList__FeaturesAssignment_1");
			builder.put(grammarAccess.getFeatureListAccess().getFeaturesAssignment_2_1(), "rule__FeatureList__FeaturesAssignment_2_1");
			builder.put(grammarAccess.getSelectedCVAccess().getOptionalAssignment_0(), "rule__SelectedCV__OptionalAssignment_0");
			builder.put(grammarAccess.getSelectedCVAccess().getComplementumVisnetisAssignment_1(), "rule__SelectedCV__ComplementumVisnetisAssignment_1");
			builder.put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
			builder.put(grammarAccess.getExternalCallPlacementStrategyAccess().getMatchingSignatureAssignment_3_1(), "rule__ExternalCallPlacementStrategy__MatchingSignatureAssignment_3_1");
			builder.put(grammarAccess.getInternalActionPlacementStrategyAccess().getForAllInternalActionsInAssignment_3_1(), "rule__InternalActionPlacementStrategy__ForAllInternalActionsInAssignment_3_1");
			builder.put(grammarAccess.getControlFlowPlacementStrategyAccess().getForAllControlFlowsInAssignment_3_1(), "rule__ControlFlowPlacementStrategy__ForAllControlFlowsInAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private FcDslGrammarAccess grammarAccess;

	@Override
	protected InternalFcDslParser createParser() {
		InternalFcDslParser result = new InternalFcDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public FcDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(FcDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
