/*
 * generated by Xtext 2.24.0
 */
package edu.kit.ipd.are.dsexplore.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FcDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class BehaviourInclusionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.BehaviourInclusion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cMultipleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cMultipleMultipleKeyword_1_0 = (Keyword)cMultipleAssignment_1.eContents().get(0);
		private final Keyword cBehaviourInclusionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdEStringParserRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionEStringParserRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPointCutKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cPointCutAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cPointCutPointCutParserRuleCall_8_2_0 = (RuleCall)cPointCutAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cPointCutAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cPointCutPointCutParserRuleCall_8_3_1_0 = (RuleCall)cPointCutAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cFeatureCompletionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cFeatureCompletionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cFeatureCompletionFeatureSelectionParserRuleCall_10_0 = (RuleCall)cFeatureCompletionAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cAdviceKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cAdviceAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cAdviceAdviceParserRuleCall_11_2_0 = (RuleCall)cAdviceAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cAdviceAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cAdviceAdviceParserRuleCall_11_3_1_0 = (RuleCall)cAdviceAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//BehaviourInclusion featureSolution::BehaviourInclusion:
		//	imports+=Import*
		//	multiple?='multiple'?
		//	'BehaviourInclusion'
		//	name=EString
		//	id=EString
		//	'{'
		//	'description' description=EString ('pointCut' '{' pointCut+=PointCut ("," pointCut+=PointCut)* '}')?
		//	'featureCompletion' featureCompletion=FeatureSelection ('advice' '{' advice+=Advice ("," advice+=Advice)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//imports+=Import*
		//multiple?='multiple'?
		//'BehaviourInclusion'
		//name=EString
		//id=EString
		//'{'
		//'description' description=EString ('pointCut' '{' pointCut+=PointCut ("," pointCut+=PointCut)* '}')?
		//'featureCompletion' featureCompletion=FeatureSelection ('advice' '{' advice+=Advice ("," advice+=Advice)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }
		
		//multiple?='multiple'?
		public Assignment getMultipleAssignment_1() { return cMultipleAssignment_1; }
		
		//'multiple'
		public Keyword getMultipleMultipleKeyword_1_0() { return cMultipleMultipleKeyword_1_0; }
		
		//'BehaviourInclusion'
		public Keyword getBehaviourInclusionKeyword_2() { return cBehaviourInclusionKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//id=EString
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_4_0() { return cIdEStringParserRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//description=EString
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_7_0() { return cDescriptionEStringParserRuleCall_7_0; }
		
		//('pointCut' '{' pointCut+=PointCut ("," pointCut+=PointCut)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'pointCut'
		public Keyword getPointCutKeyword_8_0() { return cPointCutKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//pointCut+=PointCut
		public Assignment getPointCutAssignment_8_2() { return cPointCutAssignment_8_2; }
		
		//PointCut
		public RuleCall getPointCutPointCutParserRuleCall_8_2_0() { return cPointCutPointCutParserRuleCall_8_2_0; }
		
		//("," pointCut+=PointCut)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//pointCut+=PointCut
		public Assignment getPointCutAssignment_8_3_1() { return cPointCutAssignment_8_3_1; }
		
		//PointCut
		public RuleCall getPointCutPointCutParserRuleCall_8_3_1_0() { return cPointCutPointCutParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'featureCompletion'
		public Keyword getFeatureCompletionKeyword_9() { return cFeatureCompletionKeyword_9; }
		
		//featureCompletion=FeatureSelection
		public Assignment getFeatureCompletionAssignment_10() { return cFeatureCompletionAssignment_10; }
		
		//FeatureSelection
		public RuleCall getFeatureCompletionFeatureSelectionParserRuleCall_10_0() { return cFeatureCompletionFeatureSelectionParserRuleCall_10_0; }
		
		//('advice' '{' advice+=Advice ("," advice+=Advice)* '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'advice'
		public Keyword getAdviceKeyword_11_0() { return cAdviceKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//advice+=Advice
		public Assignment getAdviceAssignment_11_2() { return cAdviceAssignment_11_2; }
		
		//Advice
		public RuleCall getAdviceAdviceParserRuleCall_11_2_0() { return cAdviceAdviceParserRuleCall_11_2_0; }
		
		//("," advice+=Advice)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//advice+=Advice
		public Assignment getAdviceAssignment_11_3_1() { return cAdviceAssignment_11_3_1; }
		
		//Advice
		public RuleCall getAdviceAdviceParserRuleCall_11_3_1_0() { return cAdviceAdviceParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class InclusionMechanismElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.InclusionMechanism");
		private final RuleCall cBehaviourInclusionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//InclusionMechanism featureSolution::InclusionMechanism:
		//	BehaviourInclusion;
		@Override public ParserRule getRule() { return rule; }
		
		//BehaviourInclusion
		public RuleCall getBehaviourInclusionParserRuleCall() { return cBehaviourInclusionParserRuleCall; }
	}
	public class PlacementStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.PlacementStrategy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlacementStrategy_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternalCallPlacementStrategyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInternalActionPlacementStrategyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cControlFlowPlacementStrategyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//PlacementStrategy placementDescription::PlacementStrategy:
		//	PlacementStrategy_Impl | ExternalCallPlacementStrategy | InternalActionPlacementStrategy |
		//	ControlFlowPlacementStrategy;
		@Override public ParserRule getRule() { return rule; }
		
		//PlacementStrategy_Impl | ExternalCallPlacementStrategy | InternalActionPlacementStrategy |
		//ControlFlowPlacementStrategy
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PlacementStrategy_Impl
		public RuleCall getPlacementStrategy_ImplParserRuleCall_0() { return cPlacementStrategy_ImplParserRuleCall_0; }
		
		//ExternalCallPlacementStrategy
		public RuleCall getExternalCallPlacementStrategyParserRuleCall_1() { return cExternalCallPlacementStrategyParserRuleCall_1; }
		
		//InternalActionPlacementStrategy
		public RuleCall getInternalActionPlacementStrategyParserRuleCall_2() { return cInternalActionPlacementStrategyParserRuleCall_2; }
		
		//ControlFlowPlacementStrategy
		public RuleCall getControlFlowPlacementStrategyParserRuleCall_3() { return cControlFlowPlacementStrategyParserRuleCall_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class PointCutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.PointCut");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPointCutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPointCutKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPlacementStrategyKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPlacementStrategyAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPlacementStrategyPlacementStrategyParserRuleCall_4_1_0 = (RuleCall)cPlacementStrategyAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PointCut placementDescription::PointCut:
		//	{placementDescription::PointCut}
		//	'PointCut'
		//	name=EString
		//	'{' ('placementStrategy' placementStrategy=PlacementStrategy)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{placementDescription::PointCut}
		//'PointCut'
		//name=EString
		//'{' ('placementStrategy' placementStrategy=PlacementStrategy)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{placementDescription::PointCut}
		public Action getPointCutAction_0() { return cPointCutAction_0; }
		
		//'PointCut'
		public Keyword getPointCutKeyword_1() { return cPointCutKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('placementStrategy' placementStrategy=PlacementStrategy)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'placementStrategy'
		public Keyword getPlacementStrategyKeyword_4_0() { return cPlacementStrategyKeyword_4_0; }
		
		//placementStrategy=PlacementStrategy
		public Assignment getPlacementStrategyAssignment_4_1() { return cPlacementStrategyAssignment_4_1; }
		
		//PlacementStrategy
		public RuleCall getPlacementStrategyPlacementStrategyParserRuleCall_4_1_0() { return cPlacementStrategyPlacementStrategyParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AdviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.Advice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAdviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAppearsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAppearsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAppearsAppearanceEnumRuleCall_3_0 = (RuleCall)cAppearsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPointCutKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPointCutAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cPointCutPointCutCrossReference_4_1_0 = (CrossReference)cPointCutAssignment_4_1.eContents().get(0);
		private final RuleCall cPointCutPointCutEStringParserRuleCall_4_1_0_1 = (RuleCall)cPointCutPointCutCrossReference_4_1_0.eContents().get(1);
		private final Keyword cPlacementPolicyKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPlacementPolicyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPlacementPolicyPlacementPolicyEnumRuleCall_6_0 = (RuleCall)cPlacementPolicyAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Advice placementDescription::Advice:
		//	'Advice'
		//	'{'
		//	'appears' appears=Appearance ('pointCut' pointCut=[placementDescription::PointCut|EString])?
		//	'placementPolicy' placementPolicy=PlacementPolicy
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Advice'
		//'{'
		//'appears' appears=Appearance ('pointCut' pointCut=[placementDescription::PointCut|EString])?
		//'placementPolicy' placementPolicy=PlacementPolicy
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Advice'
		public Keyword getAdviceKeyword_0() { return cAdviceKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'appears'
		public Keyword getAppearsKeyword_2() { return cAppearsKeyword_2; }
		
		//appears=Appearance
		public Assignment getAppearsAssignment_3() { return cAppearsAssignment_3; }
		
		//Appearance
		public RuleCall getAppearsAppearanceEnumRuleCall_3_0() { return cAppearsAppearanceEnumRuleCall_3_0; }
		
		//('pointCut' pointCut=[placementDescription::PointCut|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'pointCut'
		public Keyword getPointCutKeyword_4_0() { return cPointCutKeyword_4_0; }
		
		//pointCut=[placementDescription::PointCut|EString]
		public Assignment getPointCutAssignment_4_1() { return cPointCutAssignment_4_1; }
		
		//[placementDescription::PointCut|EString]
		public CrossReference getPointCutPointCutCrossReference_4_1_0() { return cPointCutPointCutCrossReference_4_1_0; }
		
		//EString
		public RuleCall getPointCutPointCutEStringParserRuleCall_4_1_0_1() { return cPointCutPointCutEStringParserRuleCall_4_1_0_1; }
		
		//'placementPolicy'
		public Keyword getPlacementPolicyKeyword_5() { return cPlacementPolicyKeyword_5; }
		
		//placementPolicy=PlacementPolicy
		public Assignment getPlacementPolicyAssignment_6() { return cPlacementPolicyAssignment_6; }
		
		//PlacementPolicy
		public RuleCall getPlacementPolicyPlacementPolicyEnumRuleCall_6_0() { return cPlacementPolicyPlacementPolicyEnumRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FeatureSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.FeatureSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCompletionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cCompletionFeatureCompletionCrossReference_0_0 = (CrossReference)cCompletionAssignment_0.eContents().get(0);
		private final RuleCall cCompletionFeatureCompletionEStringParserRuleCall_0_0_1 = (RuleCall)cCompletionFeatureCompletionCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFeatureListsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFeatureListsFeatureListParserRuleCall_2_0 = (RuleCall)cFeatureListsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFeatureListsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFeatureListsFeatureListParserRuleCall_3_1_0 = (RuleCall)cFeatureListsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureSelection placementDescription::FeatureSelection:
		//	Completion=[FeatureCompletionModel::FeatureCompletion|EString]
		//	'(' featureLists+=FeatureList ("," featureLists+=FeatureList)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//Completion=[FeatureCompletionModel::FeatureCompletion|EString]
		//'(' featureLists+=FeatureList ("," featureLists+=FeatureList)* ')'
		public Group getGroup() { return cGroup; }
		
		//Completion=[FeatureCompletionModel::FeatureCompletion|EString]
		public Assignment getCompletionAssignment_0() { return cCompletionAssignment_0; }
		
		//[FeatureCompletionModel::FeatureCompletion|EString]
		public CrossReference getCompletionFeatureCompletionCrossReference_0_0() { return cCompletionFeatureCompletionCrossReference_0_0; }
		
		//EString
		public RuleCall getCompletionFeatureCompletionEStringParserRuleCall_0_0_1() { return cCompletionFeatureCompletionEStringParserRuleCall_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//featureLists+=FeatureList
		public Assignment getFeatureListsAssignment_2() { return cFeatureListsAssignment_2; }
		
		//FeatureList
		public RuleCall getFeatureListsFeatureListParserRuleCall_2_0() { return cFeatureListsFeatureListParserRuleCall_2_0; }
		
		//("," featureLists+=FeatureList)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//featureLists+=FeatureList
		public Assignment getFeatureListsAssignment_3_1() { return cFeatureListsAssignment_3_1; }
		
		//FeatureList
		public RuleCall getFeatureListsFeatureListParserRuleCall_3_1_0() { return cFeatureListsFeatureListParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class FeatureListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.FeatureList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFeaturesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFeaturesSelectedCVParserRuleCall_1_0 = (RuleCall)cFeaturesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFeaturesSelectedCVParserRuleCall_2_1_0 = (RuleCall)cFeaturesAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FeatureList placementDescription::FeatureList:
		//	'{' features+=SelectedCV ("," features+=SelectedCV)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' features+=SelectedCV ("," features+=SelectedCV)* '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//features+=SelectedCV
		public Assignment getFeaturesAssignment_1() { return cFeaturesAssignment_1; }
		
		//SelectedCV
		public RuleCall getFeaturesSelectedCVParserRuleCall_1_0() { return cFeaturesSelectedCVParserRuleCall_1_0; }
		
		//("," features+=SelectedCV)*
		public Group getGroup_2() { return cGroup_2; }
		
		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//features+=SelectedCV
		public Assignment getFeaturesAssignment_2_1() { return cFeaturesAssignment_2_1; }
		
		//SelectedCV
		public RuleCall getFeaturesSelectedCVParserRuleCall_2_1_0() { return cFeaturesSelectedCVParserRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class SelectedCVElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.SelectedCV");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Assignment cComplementumVisnetisAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cComplementumVisnetisComplementumVisnetisCrossReference_1_0 = (CrossReference)cComplementumVisnetisAssignment_1.eContents().get(0);
		private final RuleCall cComplementumVisnetisComplementumVisnetisEStringParserRuleCall_1_0_1 = (RuleCall)cComplementumVisnetisComplementumVisnetisCrossReference_1_0.eContents().get(1);
		
		//SelectedCV placementDescription::SelectedCV:
		//	optional?='optional'? complementumVisnetis=[FeatureCompletionModel::ComplementumVisnetis|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//optional?='optional'? complementumVisnetis=[FeatureCompletionModel::ComplementumVisnetis|EString]
		public Group getGroup() { return cGroup; }
		
		//optional?='optional'?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//complementumVisnetis=[FeatureCompletionModel::ComplementumVisnetis|EString]
		public Assignment getComplementumVisnetisAssignment_1() { return cComplementumVisnetisAssignment_1; }
		
		//[FeatureCompletionModel::ComplementumVisnetis|EString]
		public CrossReference getComplementumVisnetisComplementumVisnetisCrossReference_1_0() { return cComplementumVisnetisComplementumVisnetisCrossReference_1_0; }
		
		//EString
		public RuleCall getComplementumVisnetisComplementumVisnetisEStringParserRuleCall_1_0_1() { return cComplementumVisnetisComplementumVisnetisEStringParserRuleCall_1_0_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURIEStringParserRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//Import placementDescription::Import:
		//	'import' importURI=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importURI=EString
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importURI=EString
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }
		
		//EString
		public RuleCall getImportURIEStringParserRuleCall_1_0() { return cImportURIEStringParserRuleCall_1_0; }
	}
	public class PlacementStrategy_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.PlacementStrategy_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlacementStrategyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlacementStrategyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PlacementStrategy_Impl placementDescription::PlacementStrategy:
		//	{placementDescription::PlacementStrategy}
		//	'PlacementStrategy';
		@Override public ParserRule getRule() { return rule; }
		
		//{placementDescription::PlacementStrategy}
		//'PlacementStrategy'
		public Group getGroup() { return cGroup; }
		
		//{placementDescription::PlacementStrategy}
		public Action getPlacementStrategyAction_0() { return cPlacementStrategyAction_0; }
		
		//'PlacementStrategy'
		public Keyword getPlacementStrategyKeyword_1() { return cPlacementStrategyKeyword_1; }
	}
	public class ExternalCallPlacementStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.ExternalCallPlacementStrategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExternalCallPlacementStrategyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExternalCallPlacementStrategyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMatchingSignatureKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMatchingSignatureAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cMatchingSignatureSignatureCrossReference_3_1_0 = (CrossReference)cMatchingSignatureAssignment_3_1.eContents().get(0);
		private final RuleCall cMatchingSignatureSignatureEStringParserRuleCall_3_1_0_1 = (RuleCall)cMatchingSignatureSignatureCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ExternalCallPlacementStrategy placementDescription::ExternalCallPlacementStrategy:
		//	{placementDescription::ExternalCallPlacementStrategy}
		//	'ExternalCallPlacementStrategy'
		//	'{' ('matchingSignature' matchingSignature=[repository::Signature|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{placementDescription::ExternalCallPlacementStrategy}
		//'ExternalCallPlacementStrategy'
		//'{' ('matchingSignature' matchingSignature=[repository::Signature|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{placementDescription::ExternalCallPlacementStrategy}
		public Action getExternalCallPlacementStrategyAction_0() { return cExternalCallPlacementStrategyAction_0; }
		
		//'ExternalCallPlacementStrategy'
		public Keyword getExternalCallPlacementStrategyKeyword_1() { return cExternalCallPlacementStrategyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('matchingSignature' matchingSignature=[repository::Signature|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'matchingSignature'
		public Keyword getMatchingSignatureKeyword_3_0() { return cMatchingSignatureKeyword_3_0; }
		
		//matchingSignature=[repository::Signature|EString]
		public Assignment getMatchingSignatureAssignment_3_1() { return cMatchingSignatureAssignment_3_1; }
		
		//[repository::Signature|EString]
		public CrossReference getMatchingSignatureSignatureCrossReference_3_1_0() { return cMatchingSignatureSignatureCrossReference_3_1_0; }
		
		//EString
		public RuleCall getMatchingSignatureSignatureEStringParserRuleCall_3_1_0_1() { return cMatchingSignatureSignatureEStringParserRuleCall_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class InternalActionPlacementStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.InternalActionPlacementStrategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalActionPlacementStrategyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInternalActionPlacementStrategyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cForAllInternalActionsInKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cForAllInternalActionsInAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cForAllInternalActionsInRepositoryComponentCrossReference_3_1_0 = (CrossReference)cForAllInternalActionsInAssignment_3_1.eContents().get(0);
		private final RuleCall cForAllInternalActionsInRepositoryComponentEStringParserRuleCall_3_1_0_1 = (RuleCall)cForAllInternalActionsInRepositoryComponentCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//InternalActionPlacementStrategy placementDescription::InternalActionPlacementStrategy:
		//	{placementDescription::InternalActionPlacementStrategy}
		//	'InternalActionPlacementStrategy'
		//	'{' ('forAllInternalActionsIn' forAllInternalActionsIn=[repository::RepositoryComponent|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{placementDescription::InternalActionPlacementStrategy}
		//'InternalActionPlacementStrategy'
		//'{' ('forAllInternalActionsIn' forAllInternalActionsIn=[repository::RepositoryComponent|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{placementDescription::InternalActionPlacementStrategy}
		public Action getInternalActionPlacementStrategyAction_0() { return cInternalActionPlacementStrategyAction_0; }
		
		//'InternalActionPlacementStrategy'
		public Keyword getInternalActionPlacementStrategyKeyword_1() { return cInternalActionPlacementStrategyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('forAllInternalActionsIn' forAllInternalActionsIn=[repository::RepositoryComponent|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'forAllInternalActionsIn'
		public Keyword getForAllInternalActionsInKeyword_3_0() { return cForAllInternalActionsInKeyword_3_0; }
		
		//forAllInternalActionsIn=[repository::RepositoryComponent|EString]
		public Assignment getForAllInternalActionsInAssignment_3_1() { return cForAllInternalActionsInAssignment_3_1; }
		
		//[repository::RepositoryComponent|EString]
		public CrossReference getForAllInternalActionsInRepositoryComponentCrossReference_3_1_0() { return cForAllInternalActionsInRepositoryComponentCrossReference_3_1_0; }
		
		//EString
		public RuleCall getForAllInternalActionsInRepositoryComponentEStringParserRuleCall_3_1_0_1() { return cForAllInternalActionsInRepositoryComponentEStringParserRuleCall_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ControlFlowPlacementStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.ControlFlowPlacementStrategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cControlFlowPlacementStrategyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cControlFlowPlacementStrategyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cForAllControlFlowsInKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cForAllControlFlowsInAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cForAllControlFlowsInRepositoryComponentCrossReference_3_1_0 = (CrossReference)cForAllControlFlowsInAssignment_3_1.eContents().get(0);
		private final RuleCall cForAllControlFlowsInRepositoryComponentEStringParserRuleCall_3_1_0_1 = (RuleCall)cForAllControlFlowsInRepositoryComponentCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ControlFlowPlacementStrategy placementDescription::ControlFlowPlacementStrategy:
		//	{placementDescription::ControlFlowPlacementStrategy}
		//	'ControlFlowPlacementStrategy'
		//	'{' ('forAllControlFlowsIn' forAllControlFlowsIn=[repository::RepositoryComponent|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{placementDescription::ControlFlowPlacementStrategy}
		//'ControlFlowPlacementStrategy'
		//'{' ('forAllControlFlowsIn' forAllControlFlowsIn=[repository::RepositoryComponent|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{placementDescription::ControlFlowPlacementStrategy}
		public Action getControlFlowPlacementStrategyAction_0() { return cControlFlowPlacementStrategyAction_0; }
		
		//'ControlFlowPlacementStrategy'
		public Keyword getControlFlowPlacementStrategyKeyword_1() { return cControlFlowPlacementStrategyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('forAllControlFlowsIn' forAllControlFlowsIn=[repository::RepositoryComponent|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'forAllControlFlowsIn'
		public Keyword getForAllControlFlowsInKeyword_3_0() { return cForAllControlFlowsInKeyword_3_0; }
		
		//forAllControlFlowsIn=[repository::RepositoryComponent|EString]
		public Assignment getForAllControlFlowsInAssignment_3_1() { return cForAllControlFlowsInAssignment_3_1; }
		
		//[repository::RepositoryComponent|EString]
		public CrossReference getForAllControlFlowsInRepositoryComponentCrossReference_3_1_0() { return cForAllControlFlowsInRepositoryComponentCrossReference_3_1_0; }
		
		//EString
		public RuleCall getForAllControlFlowsInRepositoryComponentEStringParserRuleCall_3_1_0_1() { return cForAllControlFlowsInRepositoryComponentEStringParserRuleCall_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	public class AppearanceElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.Appearance");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBEFOREEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBEFOREBEFOREKeyword_0_0 = (Keyword)cBEFOREEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAFTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAFTERAFTERKeyword_1_0 = (Keyword)cAFTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAROUNDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAROUNDAROUNDKeyword_2_0 = (Keyword)cAROUNDEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Appearance returns featureSolution::Appearance:
		//	BEFORE | AFTER | AROUND;
		public EnumRule getRule() { return rule; }
		
		//BEFORE | AFTER | AROUND
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BEFORE
		public EnumLiteralDeclaration getBEFOREEnumLiteralDeclaration_0() { return cBEFOREEnumLiteralDeclaration_0; }
		
		//'BEFORE'
		public Keyword getBEFOREBEFOREKeyword_0_0() { return cBEFOREBEFOREKeyword_0_0; }
		
		//AFTER
		public EnumLiteralDeclaration getAFTEREnumLiteralDeclaration_1() { return cAFTEREnumLiteralDeclaration_1; }
		
		//'AFTER'
		public Keyword getAFTERAFTERKeyword_1_0() { return cAFTERAFTERKeyword_1_0; }
		
		//AROUND
		public EnumLiteralDeclaration getAROUNDEnumLiteralDeclaration_2() { return cAROUNDEnumLiteralDeclaration_2; }
		
		//'AROUND'
		public Keyword getAROUNDAROUNDKeyword_2_0() { return cAROUNDAROUNDKeyword_2_0; }
	}
	public class PlacementPolicyElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "edu.kit.ipd.are.dsexplore.FcDsl.PlacementPolicy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMANDATORYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMANDATORYMANDATORYKeyword_0_0 = (Keyword)cMANDATORYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOPTIONALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOPTIONALOPTIONALKeyword_1_0 = (Keyword)cOPTIONALEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PlacementPolicy returns FeatureCompletionModel::PlacementPolicy:
		//	MANDATORY | OPTIONAL;
		public EnumRule getRule() { return rule; }
		
		//MANDATORY | OPTIONAL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MANDATORY
		public EnumLiteralDeclaration getMANDATORYEnumLiteralDeclaration_0() { return cMANDATORYEnumLiteralDeclaration_0; }
		
		//'MANDATORY'
		public Keyword getMANDATORYMANDATORYKeyword_0_0() { return cMANDATORYMANDATORYKeyword_0_0; }
		
		//OPTIONAL
		public EnumLiteralDeclaration getOPTIONALEnumLiteralDeclaration_1() { return cOPTIONALEnumLiteralDeclaration_1; }
		
		//'OPTIONAL'
		public Keyword getOPTIONALOPTIONALKeyword_1_0() { return cOPTIONALOPTIONALKeyword_1_0; }
	}
	
	private final BehaviourInclusionElements pBehaviourInclusion;
	private final InclusionMechanismElements pInclusionMechanism;
	private final PlacementStrategyElements pPlacementStrategy;
	private final EStringElements pEString;
	private final EBooleanElements pEBoolean;
	private final PointCutElements pPointCut;
	private final AdviceElements pAdvice;
	private final FeatureSelectionElements pFeatureSelection;
	private final FeatureListElements pFeatureList;
	private final SelectedCVElements pSelectedCV;
	private final ImportElements pImport;
	private final PlacementStrategy_ImplElements pPlacementStrategy_Impl;
	private final ExternalCallPlacementStrategyElements pExternalCallPlacementStrategy;
	private final InternalActionPlacementStrategyElements pInternalActionPlacementStrategy;
	private final ControlFlowPlacementStrategyElements pControlFlowPlacementStrategy;
	private final AppearanceElements eAppearance;
	private final PlacementPolicyElements ePlacementPolicy;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public FcDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBehaviourInclusion = new BehaviourInclusionElements();
		this.pInclusionMechanism = new InclusionMechanismElements();
		this.pPlacementStrategy = new PlacementStrategyElements();
		this.pEString = new EStringElements();
		this.pEBoolean = new EBooleanElements();
		this.pPointCut = new PointCutElements();
		this.pAdvice = new AdviceElements();
		this.pFeatureSelection = new FeatureSelectionElements();
		this.pFeatureList = new FeatureListElements();
		this.pSelectedCV = new SelectedCVElements();
		this.pImport = new ImportElements();
		this.pPlacementStrategy_Impl = new PlacementStrategy_ImplElements();
		this.pExternalCallPlacementStrategy = new ExternalCallPlacementStrategyElements();
		this.pInternalActionPlacementStrategy = new InternalActionPlacementStrategyElements();
		this.pControlFlowPlacementStrategy = new ControlFlowPlacementStrategyElements();
		this.eAppearance = new AppearanceElements();
		this.ePlacementPolicy = new PlacementPolicyElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("edu.kit.ipd.are.dsexplore.FcDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//BehaviourInclusion featureSolution::BehaviourInclusion:
	//	imports+=Import*
	//	multiple?='multiple'?
	//	'BehaviourInclusion'
	//	name=EString
	//	id=EString
	//	'{'
	//	'description' description=EString ('pointCut' '{' pointCut+=PointCut ("," pointCut+=PointCut)* '}')?
	//	'featureCompletion' featureCompletion=FeatureSelection ('advice' '{' advice+=Advice ("," advice+=Advice)* '}')?
	//	'}';
	public BehaviourInclusionElements getBehaviourInclusionAccess() {
		return pBehaviourInclusion;
	}
	
	public ParserRule getBehaviourInclusionRule() {
		return getBehaviourInclusionAccess().getRule();
	}
	
	//InclusionMechanism featureSolution::InclusionMechanism:
	//	BehaviourInclusion;
	public InclusionMechanismElements getInclusionMechanismAccess() {
		return pInclusionMechanism;
	}
	
	public ParserRule getInclusionMechanismRule() {
		return getInclusionMechanismAccess().getRule();
	}
	
	//PlacementStrategy placementDescription::PlacementStrategy:
	//	PlacementStrategy_Impl | ExternalCallPlacementStrategy | InternalActionPlacementStrategy |
	//	ControlFlowPlacementStrategy;
	public PlacementStrategyElements getPlacementStrategyAccess() {
		return pPlacementStrategy;
	}
	
	public ParserRule getPlacementStrategyRule() {
		return getPlacementStrategyAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//PointCut placementDescription::PointCut:
	//	{placementDescription::PointCut}
	//	'PointCut'
	//	name=EString
	//	'{' ('placementStrategy' placementStrategy=PlacementStrategy)?
	//	'}';
	public PointCutElements getPointCutAccess() {
		return pPointCut;
	}
	
	public ParserRule getPointCutRule() {
		return getPointCutAccess().getRule();
	}
	
	//Advice placementDescription::Advice:
	//	'Advice'
	//	'{'
	//	'appears' appears=Appearance ('pointCut' pointCut=[placementDescription::PointCut|EString])?
	//	'placementPolicy' placementPolicy=PlacementPolicy
	//	'}';
	public AdviceElements getAdviceAccess() {
		return pAdvice;
	}
	
	public ParserRule getAdviceRule() {
		return getAdviceAccess().getRule();
	}
	
	//FeatureSelection placementDescription::FeatureSelection:
	//	Completion=[FeatureCompletionModel::FeatureCompletion|EString]
	//	'(' featureLists+=FeatureList ("," featureLists+=FeatureList)* ')';
	public FeatureSelectionElements getFeatureSelectionAccess() {
		return pFeatureSelection;
	}
	
	public ParserRule getFeatureSelectionRule() {
		return getFeatureSelectionAccess().getRule();
	}
	
	//FeatureList placementDescription::FeatureList:
	//	'{' features+=SelectedCV ("," features+=SelectedCV)* '}';
	public FeatureListElements getFeatureListAccess() {
		return pFeatureList;
	}
	
	public ParserRule getFeatureListRule() {
		return getFeatureListAccess().getRule();
	}
	
	//SelectedCV placementDescription::SelectedCV:
	//	optional?='optional'? complementumVisnetis=[FeatureCompletionModel::ComplementumVisnetis|EString];
	public SelectedCVElements getSelectedCVAccess() {
		return pSelectedCV;
	}
	
	public ParserRule getSelectedCVRule() {
		return getSelectedCVAccess().getRule();
	}
	
	//Import placementDescription::Import:
	//	'import' importURI=EString;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//PlacementStrategy_Impl placementDescription::PlacementStrategy:
	//	{placementDescription::PlacementStrategy}
	//	'PlacementStrategy';
	public PlacementStrategy_ImplElements getPlacementStrategy_ImplAccess() {
		return pPlacementStrategy_Impl;
	}
	
	public ParserRule getPlacementStrategy_ImplRule() {
		return getPlacementStrategy_ImplAccess().getRule();
	}
	
	//ExternalCallPlacementStrategy placementDescription::ExternalCallPlacementStrategy:
	//	{placementDescription::ExternalCallPlacementStrategy}
	//	'ExternalCallPlacementStrategy'
	//	'{' ('matchingSignature' matchingSignature=[repository::Signature|EString])?
	//	'}';
	public ExternalCallPlacementStrategyElements getExternalCallPlacementStrategyAccess() {
		return pExternalCallPlacementStrategy;
	}
	
	public ParserRule getExternalCallPlacementStrategyRule() {
		return getExternalCallPlacementStrategyAccess().getRule();
	}
	
	//InternalActionPlacementStrategy placementDescription::InternalActionPlacementStrategy:
	//	{placementDescription::InternalActionPlacementStrategy}
	//	'InternalActionPlacementStrategy'
	//	'{' ('forAllInternalActionsIn' forAllInternalActionsIn=[repository::RepositoryComponent|EString])?
	//	'}';
	public InternalActionPlacementStrategyElements getInternalActionPlacementStrategyAccess() {
		return pInternalActionPlacementStrategy;
	}
	
	public ParserRule getInternalActionPlacementStrategyRule() {
		return getInternalActionPlacementStrategyAccess().getRule();
	}
	
	//ControlFlowPlacementStrategy placementDescription::ControlFlowPlacementStrategy:
	//	{placementDescription::ControlFlowPlacementStrategy}
	//	'ControlFlowPlacementStrategy'
	//	'{' ('forAllControlFlowsIn' forAllControlFlowsIn=[repository::RepositoryComponent|EString])?
	//	'}';
	public ControlFlowPlacementStrategyElements getControlFlowPlacementStrategyAccess() {
		return pControlFlowPlacementStrategy;
	}
	
	public ParserRule getControlFlowPlacementStrategyRule() {
		return getControlFlowPlacementStrategyAccess().getRule();
	}
	
	//enum Appearance returns featureSolution::Appearance:
	//	BEFORE | AFTER | AROUND;
	public AppearanceElements getAppearanceAccess() {
		return eAppearance;
	}
	
	public EnumRule getAppearanceRule() {
		return getAppearanceAccess().getRule();
	}
	
	//enum PlacementPolicy returns FeatureCompletionModel::PlacementPolicy:
	//	MANDATORY | OPTIONAL;
	public PlacementPolicyElements getPlacementPolicyAccess() {
		return ePlacementPolicy;
	}
	
	public EnumRule getPlacementPolicyRule() {
		return getPlacementPolicyAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
