/*
 * generated by Xtext 2.13.0
 */
grammar InternalQualityEffectSpecification;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.palladiosimulator.qes.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.palladiosimulator.qes.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.palladiosimulator.qes.services.QualityEffectSpecificationGrammarAccess;

}
@parser::members {
	private QualityEffectSpecificationGrammarAccess grammarAccess;

	public void setGrammarAccess(QualityEffectSpecificationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getModelAccess().getSpecificationsAssignment()); }
			(rule__Model__SpecificationsAssignment)
			{ after(grammarAccess.getModelAccess().getSpecificationsAssignment()); }
		)
		(
			{ before(grammarAccess.getModelAccess().getSpecificationsAssignment()); }
			(rule__Model__SpecificationsAssignment)*
			{ after(grammarAccess.getModelAccess().getSpecificationsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQES
entryRuleQES
:
{ before(grammarAccess.getQESRule()); }
	 ruleQES
{ after(grammarAccess.getQESRule()); } 
	 EOF 
;

// Rule QES
ruleQES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQESAccess().getGroup()); }
		(rule__QES__Group__0)
		{ after(grammarAccess.getQESAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentSpecification
entryRuleComponentSpecification
:
{ before(grammarAccess.getComponentSpecificationRule()); }
	 ruleComponentSpecification
{ after(grammarAccess.getComponentSpecificationRule()); } 
	 EOF 
;

// Rule ComponentSpecification
ruleComponentSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentSpecificationAccess().getGroup()); }
		(rule__ComponentSpecification__Group__0)
		{ after(grammarAccess.getComponentSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentProperty
entryRuleComponentProperty
:
{ before(grammarAccess.getComponentPropertyRule()); }
	 ruleComponentProperty
{ after(grammarAccess.getComponentPropertyRule()); } 
	 EOF 
;

// Rule ComponentProperty
ruleComponentProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentPropertyAccess().getAlternatives()); }
		(rule__ComponentProperty__Alternatives)
		{ after(grammarAccess.getComponentPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getGroup()); }
		(rule__Name__Group__0)
		{ after(grammarAccess.getNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getGroup()); }
		(rule__Identifier__Group__0)
		{ after(grammarAccess.getIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRole
entryRuleRole
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleAccess().getGroup()); }
		(rule__Role__Group__0)
		{ after(grammarAccess.getRoleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoleProperty
entryRuleRoleProperty
:
{ before(grammarAccess.getRolePropertyRule()); }
	 ruleRoleProperty
{ after(grammarAccess.getRolePropertyRule()); } 
	 EOF 
;

// Rule RoleProperty
ruleRoleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRolePropertyAccess().getAlternatives()); }
		(rule__RoleProperty__Alternatives)
		{ after(grammarAccess.getRolePropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssembly
entryRuleAssembly
:
{ before(grammarAccess.getAssemblyRule()); }
	 ruleAssembly
{ after(grammarAccess.getAssemblyRule()); } 
	 EOF 
;

// Rule Assembly
ruleAssembly 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssemblyAccess().getGroup()); }
		(rule__Assembly__Group__0)
		{ after(grammarAccess.getAssemblyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResource
entryRuleResource
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceAccess().getGroup()); }
		(rule__Resource__Group__0)
		{ after(grammarAccess.getResourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResourceProperty
entryRuleResourceProperty
:
{ before(grammarAccess.getResourcePropertyRule()); }
	 ruleResourceProperty
{ after(grammarAccess.getResourcePropertyRule()); } 
	 EOF 
;

// Rule ResourceProperty
ruleResourceProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourcePropertyAccess().getAlternatives()); }
		(rule__ResourceProperty__Alternatives)
		{ after(grammarAccess.getResourcePropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationSpecification
entryRuleTransformationSpecification
:
{ before(grammarAccess.getTransformationSpecificationRule()); }
	 ruleTransformationSpecification
{ after(grammarAccess.getTransformationSpecificationRule()); } 
	 EOF 
;

// Rule TransformationSpecification
ruleTransformationSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationSpecificationAccess().getAlternatives()); }
		(rule__TransformationSpecification__Alternatives)
		{ after(grammarAccess.getTransformationSpecificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNQA
entryRuleNQA
:
{ before(grammarAccess.getNQARule()); }
	 ruleNQA
{ after(grammarAccess.getNQARule()); } 
	 EOF 
;

// Rule NQA
ruleNQA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNQAAccess().getGroup()); }
		(rule__NQA__Group__0)
		{ after(grammarAccess.getNQAAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReasoning
entryRuleReasoning
:
{ before(grammarAccess.getReasoningRule()); }
	 ruleReasoning
{ after(grammarAccess.getReasoningRule()); } 
	 EOF 
;

// Rule Reasoning
ruleReasoning 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReasoningAccess().getGroup()); }
		(rule__Reasoning__Group__0)
		{ after(grammarAccess.getReasoningAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntry
entryRuleEntry
:
{ before(grammarAccess.getEntryRule()); }
	 ruleEntry
{ after(grammarAccess.getEntryRule()); } 
	 EOF 
;

// Rule Entry
ruleEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryAccess().getGroup()); }
		(rule__Entry__Group__0)
		{ after(grammarAccess.getEntryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericValue
entryRuleNumericValue
:
{ before(grammarAccess.getNumericValueRule()); }
	 ruleNumericValue
{ after(grammarAccess.getNumericValueRule()); } 
	 EOF 
;

// Rule NumericValue
ruleNumericValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericValueAccess().getGroup()); }
		(rule__NumericValue__Group__0)
		{ after(grammarAccess.getNumericValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComponentType
ruleComponentType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentTypeAccess().getAlternatives()); }
		(rule__ComponentType__Alternatives)
		{ after(grammarAccess.getComponentTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RoleType
ruleRoleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleTypeAccess().getAlternatives()); }
		(rule__RoleType__Alternatives)
		{ after(grammarAccess.getRoleTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssemblyType
ruleAssemblyType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyTypeAccess().getAlternatives()); }
		(rule__AssemblyType__Alternatives)
		{ after(grammarAccess.getAssemblyTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TransformationType
ruleTransformationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationTypeAccess().getAlternatives()); }
		(rule__TransformationType__Alternatives)
		{ after(grammarAccess.getTransformationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentPropertyAccess().getNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getComponentPropertyAccess().getNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentPropertyAccess().getIdentifierParserRuleCall_1()); }
		ruleIdentifier
		{ after(grammarAccess.getComponentPropertyAccess().getIdentifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComponentPropertyAccess().getAnnotationParserRuleCall_2()); }
		ruleAnnotation
		{ after(grammarAccess.getComponentPropertyAccess().getAnnotationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComponentPropertyAccess().getTypeParserRuleCall_3()); }
		ruleType
		{ after(grammarAccess.getComponentPropertyAccess().getTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getComponentPropertyAccess().getRoleParserRuleCall_4()); }
		ruleRole
		{ after(grammarAccess.getComponentPropertyAccess().getRoleParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getComponentPropertyAccess().getAssemblyParserRuleCall_5()); }
		ruleAssembly
		{ after(grammarAccess.getComponentPropertyAccess().getAssemblyParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getComponentPropertyAccess().getResourceParserRuleCall_6()); }
		ruleResource
		{ after(grammarAccess.getComponentPropertyAccess().getResourceParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRolePropertyAccess().getNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getRolePropertyAccess().getNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRolePropertyAccess().getIdentifierParserRuleCall_1()); }
		ruleIdentifier
		{ after(grammarAccess.getRolePropertyAccess().getIdentifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRolePropertyAccess().getAnnotationParserRuleCall_2()); }
		ruleAnnotation
		{ after(grammarAccess.getRolePropertyAccess().getAnnotationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourcePropertyAccess().getNameParserRuleCall_0()); }
		ruleName
		{ after(grammarAccess.getResourcePropertyAccess().getNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getResourcePropertyAccess().getIdentifierParserRuleCall_1()); }
		ruleIdentifier
		{ after(grammarAccess.getResourcePropertyAccess().getIdentifierParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationSpecification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationSpecificationAccess().getNQAParserRuleCall_0()); }
		ruleNQA
		{ after(grammarAccess.getTransformationSpecificationAccess().getNQAParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationSpecificationAccess().getReasoningParserRuleCall_1()); }
		ruleReasoning
		{ after(grammarAccess.getTransformationSpecificationAccess().getReasoningParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationSpecificationAccess().getNumericValueParserRuleCall_2()); }
		ruleNumericValue
		{ after(grammarAccess.getTransformationSpecificationAccess().getNumericValueParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentTypeAccess().getANYEnumLiteralDeclaration_0()); }
		('AnyComponentType')
		{ after(grammarAccess.getComponentTypeAccess().getANYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentTypeAccess().getBASICEnumLiteralDeclaration_1()); }
		('Basic')
		{ after(grammarAccess.getComponentTypeAccess().getBASICEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComponentTypeAccess().getCOMPOSITEEnumLiteralDeclaration_2()); }
		('Composite')
		{ after(grammarAccess.getComponentTypeAccess().getCOMPOSITEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleTypeAccess().getANYEnumLiteralDeclaration_0()); }
		('AnyRoleType')
		{ after(grammarAccess.getRoleTypeAccess().getANYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIRED_PROVIDEDEnumLiteralDeclaration_1()); }
		('ComponentRequiredProvided')
		{ after(grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIRED_PROVIDEDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIREDEnumLiteralDeclaration_2()); }
		('ComponentRequired')
		{ after(grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIREDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRoleTypeAccess().getCOMPONENT_PROVIDEDEnumLiteralDeclaration_3()); }
		('ComponentProvided')
		{ after(grammarAccess.getRoleTypeAccess().getCOMPONENT_PROVIDEDEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIRED_PROVIDEDEnumLiteralDeclaration_4()); }
		('InfrastructureRequiredProvided')
		{ after(grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIRED_PROVIDEDEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIREDEnumLiteralDeclaration_5()); }
		('InfrastructureRequired')
		{ after(grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIREDEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_PROVIDEDEnumLiteralDeclaration_6()); }
		('InfrastructureProvided')
		{ after(grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_PROVIDEDEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyTypeAccess().getANYEnumLiteralDeclaration_0()); }
		('AnyAssembly')
		{ after(grammarAccess.getAssemblyTypeAccess().getANYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyTypeAccess().getREQUIREDEnumLiteralDeclaration_1()); }
		('Required')
		{ after(grammarAccess.getAssemblyTypeAccess().getREQUIREDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyTypeAccess().getPROVIDEDEnumLiteralDeclaration_2()); }
		('Provided')
		{ after(grammarAccess.getAssemblyTypeAccess().getPROVIDEDEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationTypeAccess().getISEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getTransformationTypeAccess().getISEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationTypeAccess().getPLUSEnumLiteralDeclaration_1()); }
		('+')
		{ after(grammarAccess.getTransformationTypeAccess().getPLUSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationTypeAccess().getMINUSEnumLiteralDeclaration_2()); }
		('-')
		{ after(grammarAccess.getTransformationTypeAccess().getMINUSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationTypeAccess().getMULTIPLICATIONEnumLiteralDeclaration_3()); }
		('*')
		{ after(grammarAccess.getTransformationTypeAccess().getMULTIPLICATIONEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationTypeAccess().getDIVISIONEnumLiteralDeclaration_4()); }
		('/')
		{ after(grammarAccess.getTransformationTypeAccess().getDIVISIONEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QES__Group__0__Impl
	rule__QES__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQESAccess().getForKeyword_0()); }
	'For{'
	{ after(grammarAccess.getQESAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QES__Group__1__Impl
	rule__QES__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQESAccess().getComponentsAssignment_1()); }
		(rule__QES__ComponentsAssignment_1)
		{ after(grammarAccess.getQESAccess().getComponentsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getQESAccess().getComponentsAssignment_1()); }
		(rule__QES__ComponentsAssignment_1)*
		{ after(grammarAccess.getQESAccess().getComponentsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QES__Group__2__Impl
	rule__QES__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQESAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getQESAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QES__Group__3__Impl
	rule__QES__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQESAccess().getDoKeyword_3()); }
	'Do{'
	{ after(grammarAccess.getQESAccess().getDoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QES__Group__4__Impl
	rule__QES__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQESAccess().getTransformationsAssignment_4()); }
		(rule__QES__TransformationsAssignment_4)
		{ after(grammarAccess.getQESAccess().getTransformationsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getQESAccess().getTransformationsAssignment_4()); }
		(rule__QES__TransformationsAssignment_4)*
		{ after(grammarAccess.getQESAccess().getTransformationsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QES__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQESAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getQESAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentSpecification__Group__0__Impl
	rule__ComponentSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentSpecificationAccess().getComponentKeyword_0()); }
	'Component('
	{ after(grammarAccess.getComponentSpecificationAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentSpecification__Group__1__Impl
	rule__ComponentSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getComponentSpecificationAccess().getPropertiesAssignment_1()); }
		(rule__ComponentSpecification__PropertiesAssignment_1)
		{ after(grammarAccess.getComponentSpecificationAccess().getPropertiesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getComponentSpecificationAccess().getPropertiesAssignment_1()); }
		(rule__ComponentSpecification__PropertiesAssignment_1)*
		{ after(grammarAccess.getComponentSpecificationAccess().getPropertiesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentSpecification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentSpecificationAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getComponentSpecificationAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameKeyword_0()); }
	'Name('
	{ after(grammarAccess.getNameAccess().getNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNotAssignment_1()); }
	(rule__Name__NotAssignment_1)?
	{ after(grammarAccess.getNameAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__2__Impl
	rule__Name__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAssignment_2()); }
	(rule__Name__NameAssignment_2)
	{ after(grammarAccess.getNameAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getNameAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getIdKeyword_0()); }
	'Id('
	{ after(grammarAccess.getIdentifierAccess().getIdKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__1__Impl
	rule__Identifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getNotAssignment_1()); }
	(rule__Identifier__NotAssignment_1)?
	{ after(grammarAccess.getIdentifierAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__2__Impl
	rule__Identifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getIdAssignment_2()); }
	(rule__Identifier__IdAssignment_2)
	{ after(grammarAccess.getIdentifierAccess().getIdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIdentifierAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
	'Annotation('
	{ after(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getNotAssignment_1()); }
	(rule__Annotation__NotAssignment_1)?
	{ after(grammarAccess.getAnnotationAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAnnotationAssignment_2()); }
	(rule__Annotation__AnnotationAssignment_2)
	{ after(grammarAccess.getAnnotationAccess().getAnnotationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'Type('
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNotAssignment_1()); }
	(rule__Type__NotAssignment_1)?
	{ after(grammarAccess.getTypeAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_2()); }
	(rule__Type__TypeAssignment_2)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__0__Impl
	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
	'Role('
	{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__1__Impl
	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getNotAssignment_1()); }
	(rule__Role__NotAssignment_1)?
	{ after(grammarAccess.getRoleAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__2__Impl
	rule__Role__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getTypeAssignment_2()); }
	(rule__Role__TypeAssignment_2)
	{ after(grammarAccess.getRoleAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__3__Impl
	rule__Role__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRoleAccess().getPropertiesAssignment_3()); }
		(rule__Role__PropertiesAssignment_3)
		{ after(grammarAccess.getRoleAccess().getPropertiesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getRoleAccess().getPropertiesAssignment_3()); }
		(rule__Role__PropertiesAssignment_3)*
		{ after(grammarAccess.getRoleAccess().getPropertiesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRoleAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assembly__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assembly__Group__0__Impl
	rule__Assembly__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyAccess().getAssemblyKeyword_0()); }
	'Assembly('
	{ after(grammarAccess.getAssemblyAccess().getAssemblyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assembly__Group__1__Impl
	rule__Assembly__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyAccess().getNotAssignment_1()); }
	(rule__Assembly__NotAssignment_1)?
	{ after(grammarAccess.getAssemblyAccess().getNotAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assembly__Group__2__Impl
	rule__Assembly__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyAccess().getTypeAssignment_2()); }
	(rule__Assembly__TypeAssignment_2)
	{ after(grammarAccess.getAssemblyAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assembly__Group__3__Impl
	rule__Assembly__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAssemblyAccess().getComponentsAssignment_3()); }
		(rule__Assembly__ComponentsAssignment_3)
		{ after(grammarAccess.getAssemblyAccess().getComponentsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getAssemblyAccess().getComponentsAssignment_3()); }
		(rule__Assembly__ComponentsAssignment_3)*
		{ after(grammarAccess.getAssemblyAccess().getComponentsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assembly__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssemblyAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAssemblyAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__0__Impl
	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getResourceKeyword_0()); }
	'Resource('
	{ after(grammarAccess.getResourceAccess().getResourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__1__Impl
	rule__Resource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getResourceAccess().getPropertiesAssignment_1()); }
		(rule__Resource__PropertiesAssignment_1)
		{ after(grammarAccess.getResourceAccess().getPropertiesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getResourceAccess().getPropertiesAssignment_1()); }
		(rule__Resource__PropertiesAssignment_1)*
		{ after(grammarAccess.getResourceAccess().getPropertiesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getResourceAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NQA__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NQA__Group__0__Impl
	rule__NQA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNQAAccess().getNQAKeyword_0()); }
	'NQA('
	{ after(grammarAccess.getNQAAccess().getNQAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NQA__Group__1__Impl
	rule__NQA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNQAAccess().getQualityAssignment_1()); }
	(rule__NQA__QualityAssignment_1)
	{ after(grammarAccess.getNQAAccess().getQualityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NQA__Group__2__Impl
	rule__NQA__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNQAAccess().getTypeAssignment_2()); }
	(rule__NQA__TypeAssignment_2)
	{ after(grammarAccess.getNQAAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NQA__Group__3__Impl
	rule__NQA__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNQAAccess().getElementAssignment_3()); }
	(rule__NQA__ElementAssignment_3)
	{ after(grammarAccess.getNQAAccess().getElementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NQA__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNQAAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getNQAAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reasoning__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasoning__Group__0__Impl
	rule__Reasoning__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasoningAccess().getReasoningKeyword_0()); }
	'Reasoning('
	{ after(grammarAccess.getReasoningAccess().getReasoningKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasoning__Group__1__Impl
	rule__Reasoning__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasoningAccess().getQualityAssignment_1()); }
	(rule__Reasoning__QualityAssignment_1)
	{ after(grammarAccess.getReasoningAccess().getQualityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasoning__Group__2__Impl
	rule__Reasoning__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasoningAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getReasoningAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasoning__Group__3__Impl
	rule__Reasoning__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReasoningAccess().getRulesAssignment_3()); }
		(rule__Reasoning__RulesAssignment_3)
		{ after(grammarAccess.getReasoningAccess().getRulesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getReasoningAccess().getRulesAssignment_3()); }
		(rule__Reasoning__RulesAssignment_3)*
		{ after(grammarAccess.getReasoningAccess().getRulesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reasoning__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasoningAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getReasoningAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getQualitiesAssignment_1()); }
		(rule__Rule__QualitiesAssignment_1)
		{ after(grammarAccess.getRuleAccess().getQualitiesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getQualitiesAssignment_1()); }
		(rule__Rule__QualitiesAssignment_1)*
		{ after(grammarAccess.getRuleAccess().getQualitiesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRuleAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getEntriesAssignment_3()); }
		(rule__Rule__EntriesAssignment_3)
		{ after(grammarAccess.getRuleAccess().getEntriesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getEntriesAssignment_3()); }
		(rule__Rule__EntriesAssignment_3)*
		{ after(grammarAccess.getRuleAccess().getEntriesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRuleAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__0__Impl
	rule__Entry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getEntryAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__1__Impl
	rule__Entry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEntryAccess().getKeyAssignment_1()); }
		(rule__Entry__KeyAssignment_1)
		{ after(grammarAccess.getEntryAccess().getKeyAssignment_1()); }
	)
	(
		{ before(grammarAccess.getEntryAccess().getKeyAssignment_1()); }
		(rule__Entry__KeyAssignment_1)*
		{ after(grammarAccess.getEntryAccess().getKeyAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__2__Impl
	rule__Entry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getEntryAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__3__Impl
	rule__Entry__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getValueAssignment_3()); }
	(rule__Entry__ValueAssignment_3)
	{ after(grammarAccess.getEntryAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getEntryAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue__Group__0__Impl
	rule__NumericValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValueAccess().getValueTypeAssignment_0()); }
	(rule__NumericValue__ValueTypeAssignment_0)
	{ after(grammarAccess.getNumericValueAccess().getValueTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue__Group__1__Impl
	rule__NumericValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValueAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getNumericValueAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue__Group__2__Impl
	rule__NumericValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValueAccess().getTransformationTypeAssignment_2()); }
	(rule__NumericValue__TransformationTypeAssignment_2)
	{ after(grammarAccess.getNumericValueAccess().getTransformationTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue__Group__3__Impl
	rule__NumericValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValueAccess().getTransformationNumberAssignment_3()); }
	(rule__NumericValue__TransformationNumberAssignment_3)
	{ after(grammarAccess.getNumericValueAccess().getTransformationNumberAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericValueAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getNumericValueAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__SpecificationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSpecificationsQESParserRuleCall_0()); }
		ruleQES
		{ after(grammarAccess.getModelAccess().getSpecificationsQESParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__ComponentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQESAccess().getComponentsComponentSpecificationParserRuleCall_1_0()); }
		ruleComponentSpecification
		{ after(grammarAccess.getQESAccess().getComponentsComponentSpecificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QES__TransformationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQESAccess().getTransformationsTransformationSpecificationParserRuleCall_4_0()); }
		ruleTransformationSpecification
		{ after(grammarAccess.getQESAccess().getTransformationsTransformationSpecificationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentSpecification__PropertiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentSpecificationAccess().getPropertiesComponentPropertyParserRuleCall_1_0()); }
		ruleComponentProperty
		{ after(grammarAccess.getComponentSpecificationAccess().getPropertiesComponentPropertyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getNameAccess().getNotNotKeyword_1_0()); }
			'Not'
			{ after(grammarAccess.getNameAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getNameAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNameAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getIdentifierAccess().getNotNotKeyword_1_0()); }
			'Not'
			{ after(grammarAccess.getIdentifierAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getIdentifierAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getIdIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierAccess().getIdIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getAnnotationAccess().getNotNotKeyword_1_0()); }
			'Not'
			{ after(grammarAccess.getAnnotationAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getAnnotationAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__AnnotationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnotationSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAnnotationAccess().getAnnotationSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getNotNotKeyword_1_0()); }
			'Not'
			{ after(grammarAccess.getTypeAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeComponentTypeEnumRuleCall_2_0()); }
		ruleComponentType
		{ after(grammarAccess.getTypeAccess().getTypeComponentTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getRoleAccess().getNotNotKeyword_1_0()); }
			'Not'
			{ after(grammarAccess.getRoleAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getRoleAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleAccess().getTypeRoleTypeEnumRuleCall_2_0()); }
		ruleRoleType
		{ after(grammarAccess.getRoleAccess().getTypeRoleTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleAccess().getPropertiesRolePropertyParserRuleCall_3_0()); }
		ruleRoleProperty
		{ after(grammarAccess.getRoleAccess().getPropertiesRolePropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__NotAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyAccess().getNotNotKeyword_1_0()); }
		(
			{ before(grammarAccess.getAssemblyAccess().getNotNotKeyword_1_0()); }
			'Not'
			{ after(grammarAccess.getAssemblyAccess().getNotNotKeyword_1_0()); }
		)
		{ after(grammarAccess.getAssemblyAccess().getNotNotKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyAccess().getTypeAssemblyTypeEnumRuleCall_2_0()); }
		ruleAssemblyType
		{ after(grammarAccess.getAssemblyAccess().getTypeAssemblyTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assembly__ComponentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyAccess().getComponentsComponentSpecificationParserRuleCall_3_0()); }
		ruleComponentSpecification
		{ after(grammarAccess.getAssemblyAccess().getComponentsComponentSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__PropertiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getPropertiesResourcePropertyParserRuleCall_1_0()); }
		ruleResourceProperty
		{ after(grammarAccess.getResourceAccess().getPropertiesResourcePropertyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__QualityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNQAAccess().getQualitySTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNQAAccess().getQualitySTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNQAAccess().getTypeTransformationTypeEnumRuleCall_2_0()); }
		ruleTransformationType
		{ after(grammarAccess.getNQAAccess().getTypeTransformationTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NQA__ElementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNQAAccess().getElementSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getNQAAccess().getElementSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__QualityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasoningAccess().getQualitySTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getReasoningAccess().getQualitySTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reasoning__RulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasoningAccess().getRulesRuleParserRuleCall_3_0()); }
		ruleRule
		{ after(grammarAccess.getReasoningAccess().getRulesRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__QualitiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getQualitiesSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRuleAccess().getQualitiesSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__EntriesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getEntriesEntryParserRuleCall_3_0()); }
		ruleEntry
		{ after(grammarAccess.getRuleAccess().getEntriesEntryParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryAccess().getKeySTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEntryAccess().getKeySTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryAccess().getValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getEntryAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__ValueTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValueAccess().getValueTypeSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getNumericValueAccess().getValueTypeSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__TransformationTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValueAccess().getTransformationTypeTransformationTypeEnumRuleCall_2_0()); }
		ruleTransformationType
		{ after(grammarAccess.getNumericValueAccess().getTransformationTypeTransformationTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__TransformationNumberAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValueAccess().getTransformationNumberNUMBERTerminalRuleCall_3_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getNumericValueAccess().getTransformationNumberNUMBERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMBER : RULE_INT ('.' RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
