grammar org.palladiosimulator.qes.QualityEffectSpecification with org.eclipse.xtext.common.Terminals

generate qualityEffectSpecification "http://www.palladiosimulator.org/qes/QualityEffectSpecification"

Model:
    components+=Component+ ":" transformations+=Transformation+;

Component:
    'Component(' properties+=Propertie+ ')';

Propertie:
    Negation | ComponentPropertie;

Negation:
    'Not(' propertie=ComponentPropertie ')';

ComponentPropertie:
    Name | Identifier | Type | Role | Assembly;

Name:
    'Name(' name=ID ')';

Identifier:
    'Id(' id=ID ')';

Type:
    'Type(' type=ComponentType ')';

enum ComponentType:
    BASIC='basic' | COMPOSITE='composite';

Role:
    'Role(' types+=RoleType+ properties+=RolePropertie+ ')';

enum RoleType:
    REQUIRED='required' | PROVIDED='provided' | COMPONENT='component' | INFRASTRUCTURE='infrastructure';

RolePropertie:
    Name | Identifier ;

Assembly:
    'Assembly(' assemblyType=AssemblyType assemblyComponent=Component ')';

enum AssemblyType:
    REQUIRED='required' | PROVIDED='provided' | ASSEMBLY='assembly';

Transformation:
    NQA | Reasoning;

NQA:
    'NQA(' quality=ID '=' element=ID ')';

Reasoning:
    'Reasoning(' quality=ID '{' rules+=Rule+ '})';

Rule:
    '(' qualities+=ID+ '=' entries+=Entry ')';

Entry:
    '[' key+=ID+ '=' value=ID ']';
