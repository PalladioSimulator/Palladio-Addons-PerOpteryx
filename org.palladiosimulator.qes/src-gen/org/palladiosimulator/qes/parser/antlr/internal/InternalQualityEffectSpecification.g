/*
 * generated by Xtext 2.12.0
 */
grammar InternalQualityEffectSpecification;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.palladiosimulator.qes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.palladiosimulator.qes.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.palladiosimulator.qes.services.QualityEffectSpecificationGrammarAccess;

}

@parser::members {

 	private QualityEffectSpecificationGrammarAccess grammarAccess;

    public InternalQualityEffectSpecificationParser(TokenStream input, QualityEffectSpecificationGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected QualityEffectSpecificationGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSpecificationsQualityEffectSpecificationParserRuleCall_0_0());
				}
				lv_specifications_0_0=ruleQualityEffectSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"specifications",
						lv_specifications_0_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.QualityEffectSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				this_NL_1=RULE_NL
				{
					newLeafNode(this_NL_1, grammarAccess.getModelAccess().getNLTerminalRuleCall_1_0());
				}
			)+
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getSpecificationsQualityEffectSpecificationParserRuleCall_1_1_0());
					}
					lv_specifications_2_0=ruleQualityEffectSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"specifications",
							lv_specifications_2_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.QualityEffectSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			this_NL_3=RULE_NL
			{
				newLeafNode(this_NL_3, grammarAccess.getModelAccess().getNLTerminalRuleCall_2());
			}
		)+
	)
;

// Entry rule entryRuleQualityEffectSpecification
entryRuleQualityEffectSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualityEffectSpecificationRule()); }
	iv_ruleQualityEffectSpecification=ruleQualityEffectSpecification
	{ $current=$iv_ruleQualityEffectSpecification.current; }
	EOF;

// Rule QualityEffectSpecification
ruleQualityEffectSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='For'
		{
			newLeafNode(otherlv_0, grammarAccess.getQualityEffectSpecificationAccess().getForKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getQualityEffectSpecificationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQualityEffectSpecificationAccess().getComponentsComponentSpecificationParserRuleCall_2_0());
				}
				lv_components_2_0=ruleComponentSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualityEffectSpecificationRule());
					}
					add(
						$current,
						"components",
						lv_components_2_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.ComponentSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getQualityEffectSpecificationAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQualityEffectSpecificationAccess().getComponentsComponentSpecificationParserRuleCall_3_1_0());
					}
					lv_components_4_0=ruleComponentSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualityEffectSpecificationRule());
						}
						add(
							$current,
							"components",
							lv_components_4_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.ComponentSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getQualityEffectSpecificationAccess().getRightCurlyBracketKeyword_4());
		}
		otherlv_6='Do'
		{
			newLeafNode(otherlv_6, grammarAccess.getQualityEffectSpecificationAccess().getDoKeyword_5());
		}
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getQualityEffectSpecificationAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQualityEffectSpecificationAccess().getTransformationsTransformationSpecificationParserRuleCall_7_0());
				}
				lv_transformations_8_0=ruleTransformationSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualityEffectSpecificationRule());
					}
					add(
						$current,
						"transformations",
						lv_transformations_8_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.TransformationSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='and'
			{
				newLeafNode(otherlv_9, grammarAccess.getQualityEffectSpecificationAccess().getAndKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQualityEffectSpecificationAccess().getTransformationsTransformationSpecificationParserRuleCall_8_1_0());
					}
					lv_transformations_10_0=ruleTransformationSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualityEffectSpecificationRule());
						}
						add(
							$current,
							"transformations",
							lv_transformations_10_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.TransformationSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getQualityEffectSpecificationAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleComponentSpecification
entryRuleComponentSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentSpecificationRule()); }
	iv_ruleComponentSpecification=ruleComponentSpecification
	{ $current=$iv_ruleComponentSpecification.current; }
	EOF;

// Rule ComponentSpecification
ruleComponentSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentSpecificationAccess().getComponentKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentSpecificationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentSpecificationAccess().getPropertiesComponentPropertyParserRuleCall_2_0());
				}
				lv_properties_2_0=ruleComponentProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentSpecificationRule());
					}
					add(
						$current,
						"properties",
						lv_properties_2_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.ComponentProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getComponentSpecificationAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentSpecificationAccess().getPropertiesComponentPropertyParserRuleCall_3_1_0());
					}
					lv_properties_4_0=ruleComponentProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentSpecificationRule());
						}
						add(
							$current,
							"properties",
							lv_properties_4_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.ComponentProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getComponentSpecificationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleComponentProperty
entryRuleComponentProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentPropertyRule()); }
	iv_ruleComponentProperty=ruleComponentProperty
	{ $current=$iv_ruleComponentProperty.current; }
	EOF;

// Rule ComponentProperty
ruleComponentProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current = $this_Name_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getIdentifierParserRuleCall_1());
		}
		this_Identifier_1=ruleIdentifier
		{
			$current = $this_Identifier_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getAnnotationParserRuleCall_2());
		}
		this_Annotation_2=ruleAnnotation
		{
			$current = $this_Annotation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getTypeParserRuleCall_3());
		}
		this_Type_3=ruleType
		{
			$current = $this_Type_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getRoleParserRuleCall_4());
		}
		this_Role_4=ruleRole
		{
			$current = $this_Role_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getAssemblyParserRuleCall_5());
		}
		this_Assembly_5=ruleAssembly
		{
			$current = $this_Assembly_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentPropertyAccess().getResourceParserRuleCall_6());
		}
		this_Resource_6=ruleResource
		{
			$current = $this_Resource_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleName
entryRuleName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current; }
	EOF;

// Rule Name
ruleName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Name'
		{
			newLeafNode(otherlv_0, grammarAccess.getNameAccess().getNameKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getNameAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_not_2_0='not'
				{
					newLeafNode(lv_not_2_0, grammarAccess.getNameAccess().getNotNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNameRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				lv_autonym_3_0=RULE_STRING
				{
					newLeafNode(lv_autonym_3_0, grammarAccess.getNameAccess().getAutonymSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNameRule());
					}
					setWithLastConsumed(
						$current,
						"autonym",
						lv_autonym_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getNameAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current; }
	EOF;

// Rule Identifier
ruleIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Id'
		{
			newLeafNode(otherlv_0, grammarAccess.getIdentifierAccess().getIdKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIdentifierAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_not_2_0='not'
				{
					newLeafNode(lv_not_2_0, grammarAccess.getIdentifierAccess().getNotNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				lv_id_3_0=RULE_STRING
				{
					newLeafNode(lv_id_3_0, grammarAccess.getIdentifierAccess().getIdSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIdentifierAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Annotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getAnnotationKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_not_2_0='not'
				{
					newLeafNode(lv_not_2_0, grammarAccess.getAnnotationAccess().getNotNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				lv_annotation_3_0=RULE_STRING
				{
					newLeafNode(lv_annotation_3_0, grammarAccess.getAnnotationAccess().getAnnotationSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"annotation",
						lv_annotation_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Type'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAccess().getTypeKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_not_2_0='not'
				{
					newLeafNode(lv_not_2_0, grammarAccess.getTypeAccess().getNotNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypeComponentTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleComponentType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.ComponentType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current; }
	EOF;

// Rule Role
ruleRole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Role'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoleAccess().getRoleKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRoleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_not_2_0='not'
				{
					newLeafNode(lv_not_2_0, grammarAccess.getRoleAccess().getNotNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoleRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRoleAccess().getTypeRoleTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleRoleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoleRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.RoleType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='with'
			{
				newLeafNode(otherlv_4, grammarAccess.getRoleAccess().getWithKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoleAccess().getPropertiesRolePropertyParserRuleCall_4_1_0());
					}
					lv_properties_5_0=ruleRoleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoleRule());
						}
						add(
							$current,
							"properties",
							lv_properties_5_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.RoleProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='and'
				{
					newLeafNode(otherlv_6, grammarAccess.getRoleAccess().getAndKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRoleAccess().getPropertiesRolePropertyParserRuleCall_4_2_1_0());
						}
						lv_properties_7_0=ruleRoleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoleRule());
							}
							add(
								$current,
								"properties",
								lv_properties_7_0,
								"org.palladiosimulator.qes.QualityEffectSpecification.RoleProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getRoleAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleRoleProperty
entryRuleRoleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRolePropertyRule()); }
	iv_ruleRoleProperty=ruleRoleProperty
	{ $current=$iv_ruleRoleProperty.current; }
	EOF;

// Rule RoleProperty
ruleRoleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRolePropertyAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current = $this_Name_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRolePropertyAccess().getIdentifierParserRuleCall_1());
		}
		this_Identifier_1=ruleIdentifier
		{
			$current = $this_Identifier_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRolePropertyAccess().getAnnotationParserRuleCall_2());
		}
		this_Annotation_2=ruleAnnotation
		{
			$current = $this_Annotation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssembly
entryRuleAssembly returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssemblyRule()); }
	iv_ruleAssembly=ruleAssembly
	{ $current=$iv_ruleAssembly.current; }
	EOF;

// Rule Assembly
ruleAssembly returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Assembly'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssemblyAccess().getAssemblyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAssemblyAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_not_2_0='not'
				{
					newLeafNode(lv_not_2_0, grammarAccess.getAssemblyAccess().getNotNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssemblyRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAssemblyAccess().getTypeAssemblyTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleAssemblyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssemblyRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.AssemblyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='with'
			{
				newLeafNode(otherlv_4, grammarAccess.getAssemblyAccess().getWithKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssemblyAccess().getComponentComponentSpecificationParserRuleCall_4_1_0());
					}
					lv_component_5_0=ruleComponentSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssemblyRule());
						}
						set(
							$current,
							"component",
							lv_component_5_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.ComponentSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getAssemblyAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	iv_ruleResource=ruleResource
	{ $current=$iv_ruleResource.current; }
	EOF;

// Rule Resource
ruleResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Resource'
		{
			newLeafNode(otherlv_0, grammarAccess.getResourceAccess().getResourceKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getResourceAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceAccess().getPropertiesResourcePropertyParserRuleCall_2_0());
				}
				lv_properties_2_0=ruleResourceProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRule());
					}
					add(
						$current,
						"properties",
						lv_properties_2_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.ResourceProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getResourceAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResourceAccess().getPropertiesResourcePropertyParserRuleCall_3_1_0());
					}
					lv_properties_4_0=ruleResourceProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResourceRule());
						}
						add(
							$current,
							"properties",
							lv_properties_4_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.ResourceProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getResourceAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleResourceProperty
entryRuleResourceProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourcePropertyRule()); }
	iv_ruleResourceProperty=ruleResourceProperty
	{ $current=$iv_ruleResourceProperty.current; }
	EOF;

// Rule ResourceProperty
ruleResourceProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getResourcePropertyAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current = $this_Name_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getResourcePropertyAccess().getIdentifierParserRuleCall_1());
		}
		this_Identifier_1=ruleIdentifier
		{
			$current = $this_Identifier_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTransformationSpecification
entryRuleTransformationSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationSpecificationRule()); }
	iv_ruleTransformationSpecification=ruleTransformationSpecification
	{ $current=$iv_ruleTransformationSpecification.current; }
	EOF;

// Rule TransformationSpecification
ruleTransformationSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTransformationSpecificationAccess().getNQAParserRuleCall_0());
		}
		this_NQA_0=ruleNQA
		{
			$current = $this_NQA_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationSpecificationAccess().getReasoningParserRuleCall_1());
		}
		this_Reasoning_1=ruleReasoning
		{
			$current = $this_Reasoning_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationSpecificationAccess().getNumericValueParserRuleCall_2());
		}
		this_NumericValue_2=ruleNumericValue
		{
			$current = $this_NumericValue_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNQA
entryRuleNQA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNQARule()); }
	iv_ruleNQA=ruleNQA
	{ $current=$iv_ruleNQA.current; }
	EOF;

// Rule NQA
ruleNQA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NQA'
		{
			newLeafNode(otherlv_0, grammarAccess.getNQAAccess().getNQAKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getNQAAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_quality_2_0=RULE_STRING
				{
					newLeafNode(lv_quality_2_0, grammarAccess.getNQAAccess().getQualitySTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNQARule());
					}
					setWithLastConsumed(
						$current,
						"quality",
						lv_quality_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNQAAccess().getTypeTransformationTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleTransformationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNQARule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.TransformationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_element_4_0=RULE_STRING
				{
					newLeafNode(lv_element_4_0, grammarAccess.getNQAAccess().getElementSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNQARule());
					}
					setWithLastConsumed(
						$current,
						"element",
						lv_element_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getNQAAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleReasoning
entryRuleReasoning returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReasoningRule()); }
	iv_ruleReasoning=ruleReasoning
	{ $current=$iv_ruleReasoning.current; }
	EOF;

// Rule Reasoning
ruleReasoning returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Reasoning'
		{
			newLeafNode(otherlv_0, grammarAccess.getReasoningAccess().getReasoningKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getReasoningAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_quality_2_0=RULE_STRING
				{
					newLeafNode(lv_quality_2_0, grammarAccess.getReasoningAccess().getQualitySTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReasoningRule());
					}
					setWithLastConsumed(
						$current,
						"quality",
						lv_quality_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getReasoningAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReasoningAccess().getRulesRuleParserRuleCall_4_0());
				}
				lv_rules_4_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReasoningRule());
					}
					add(
						$current,
						"rules",
						lv_rules_4_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getReasoningAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReasoningAccess().getRulesRuleParserRuleCall_5_1_0());
					}
					lv_rules_6_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReasoningRule());
						}
						add(
							$current,
							"rules",
							lv_rules_6_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getReasoningAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_qualities_2_0=RULE_STRING
				{
					newLeafNode(lv_qualities_2_0, grammarAccess.getRuleAccess().getQualitiesSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					addWithLastConsumed(
						$current,
						"qualities",
						lv_qualities_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_qualities_4_0=RULE_STRING
					{
						newLeafNode(lv_qualities_4_0, grammarAccess.getRuleAccess().getQualitiesSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						addWithLastConsumed(
							$current,
							"qualities",
							lv_qualities_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getEntriesEntryParserRuleCall_5_0());
				}
				lv_entries_6_0=ruleEntry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"entries",
						lv_entries_6_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.Entry");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getEntriesEntryParserRuleCall_6_1_0());
					}
					lv_entries_8_0=ruleEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"entries",
							lv_entries_8_0,
							"org.palladiosimulator.qes.QualityEffectSpecification.Entry");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleEntry
entryRuleEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryRule()); }
	iv_ruleEntry=ruleEntry
	{ $current=$iv_ruleEntry.current; }
	EOF;

// Rule Entry
ruleEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entry'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntryAccess().getEntryKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEntryAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_key_2_0=RULE_STRING
				{
					newLeafNode(lv_key_2_0, grammarAccess.getEntryAccess().getKeySTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryRule());
					}
					addWithLastConsumed(
						$current,
						"key",
						lv_key_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getEntryAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_key_4_0=RULE_STRING
					{
						newLeafNode(lv_key_4_0, grammarAccess.getEntryAccess().getKeySTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntryRule());
						}
						addWithLastConsumed(
							$current,
							"key",
							lv_key_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getEntryAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_value_6_0=RULE_STRING
				{
					newLeafNode(lv_value_6_0, grammarAccess.getEntryAccess().getValueSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getEntryAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleNumericValue
entryRuleNumericValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericValueRule()); }
	iv_ruleNumericValue=ruleNumericValue
	{ $current=$iv_ruleNumericValue.current; }
	EOF;

// Rule NumericValue
ruleNumericValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_valueType_0_0=RULE_ID
				{
					newLeafNode(lv_valueType_0_0, grammarAccess.getNumericValueAccess().getValueTypeIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumericValueRule());
					}
					setWithLastConsumed(
						$current,
						"valueType",
						lv_valueType_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getNumericValueAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericValueAccess().getTransformationTypeTransformationTypeEnumRuleCall_2_0());
				}
				lv_transformationType_2_0=ruleTransformationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericValueRule());
					}
					set(
						$current,
						"transformationType",
						lv_transformationType_2_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.TransformationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_transformationNumber_3_0=RULE_NUMBER
				{
					newLeafNode(lv_transformationNumber_3_0, grammarAccess.getNumericValueAccess().getTransformationNumberNUMBERTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumericValueRule());
					}
					setWithLastConsumed(
						$current,
						"transformationNumber",
						lv_transformationNumber_3_0,
						"org.palladiosimulator.qes.QualityEffectSpecification.NUMBER");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getNumericValueAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Rule ComponentType
ruleComponentType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AnyComponentType'
			{
				$current = grammarAccess.getComponentTypeAccess().getANYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComponentTypeAccess().getANYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Basic'
			{
				$current = grammarAccess.getComponentTypeAccess().getBASICEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComponentTypeAccess().getBASICEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Composite'
			{
				$current = grammarAccess.getComponentTypeAccess().getCOMPOSITEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComponentTypeAccess().getCOMPOSITEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule RoleType
ruleRoleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AnyRoleType'
			{
				$current = grammarAccess.getRoleTypeAccess().getANYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRoleTypeAccess().getANYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ComponentRequiredProvided'
			{
				$current = grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIRED_PROVIDEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIRED_PROVIDEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='ComponentRequired'
			{
				$current = grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIREDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRoleTypeAccess().getCOMPONENT_REQUIREDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ComponentProvided'
			{
				$current = grammarAccess.getRoleTypeAccess().getCOMPONENT_PROVIDEDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRoleTypeAccess().getCOMPONENT_PROVIDEDEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='InfrastructureRequiredProvided'
			{
				$current = grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIRED_PROVIDEDEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIRED_PROVIDEDEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='InfrastructureRequired'
			{
				$current = grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIREDEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_REQUIREDEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='InfrastructureProvided'
			{
				$current = grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_PROVIDEDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getRoleTypeAccess().getINFRASTRUCTURE_PROVIDEDEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule AssemblyType
ruleAssemblyType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AnyAssembly'
			{
				$current = grammarAccess.getAssemblyTypeAccess().getANYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAssemblyTypeAccess().getANYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Required'
			{
				$current = grammarAccess.getAssemblyTypeAccess().getREQUIREDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAssemblyTypeAccess().getREQUIREDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Provided'
			{
				$current = grammarAccess.getAssemblyTypeAccess().getPROVIDEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAssemblyTypeAccess().getPROVIDEDEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TransformationType
ruleTransformationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getTransformationTypeAccess().getISEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTransformationTypeAccess().getISEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+'
			{
				$current = grammarAccess.getTransformationTypeAccess().getPLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTransformationTypeAccess().getPLUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='-'
			{
				$current = grammarAccess.getTransformationTypeAccess().getMINUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTransformationTypeAccess().getMINUSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='*'
			{
				$current = grammarAccess.getTransformationTypeAccess().getMULTIPLICATIONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTransformationTypeAccess().getMULTIPLICATIONEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='/'
			{
				$current = grammarAccess.getTransformationTypeAccess().getDIVISIONEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTransformationTypeAccess().getDIVISIONEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_NUMBER : RULE_INT ('.' RULE_INT)?;

RULE_NL : '\r'? '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
